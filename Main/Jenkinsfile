pipeline {
    agent any
    
    environment {
        DOTNET_CLI_TELEMETRY_OPTOUT = '1' // Onemogućava slanje telemetrije .NET Core CLI
        NODEJS_HOME = '/usr/local/bin'    // Putanja do Node.js
        PATH = "${env.PATH}:${NODEJS_HOME}"
    }
    
    stages {
        stage('Checkout') {
            steps {
                git credentialsId: 'your-credentials-id', url: 'https://github.com/Armel90/dms.git' // Preuzimanje izvornog koda iz Git repozitorija
            }
        }
        
        stage('Install .NET Core SDK') {
            steps {
                script {
                    if (!fileExists('/usr/share/dotnet/dotnet')) {
                        sh '''
                            wget https://dotnet.microsoft.com/download/dotnet-core/scripts/v1/dotnet-install.sh
                            chmod +x dotnet-install.sh
                            ./dotnet-install.sh -c 7.0
                        '''
                    }
                }
            }
        }
        
        stage('Install Node.js and Angular CLI') {
            steps {
                script {
                    if (!fileExists('/usr/bin/node')) {
                        sh '''
                            curl -fsSL https://deb.nodesource.com/setup_16.x | sudo -E bash -
                            sudo apt-get install -y nodejs
                            sudo npm install -g @angular/cli
                        '''
                    }
                }
            }
        }
        
        stage('Restore NuGet Packages') {
            steps {
                sh 'dotnet restore DocumentManagement.sln' // Obnavljanje NuGet paketa
            }
        }
        
        stage('Build .NET Core Solution') {
            steps {
                sh 'dotnet build DocumentManagement.sln --configuration Release' // Izgradnja projekta
            }
        }
        
        stage('Run Tests') {
            steps {
                sh 'dotnet test DocumentManagement.sln' // Pokretanje testova
            }
        }
        
        stage('Deploy') {
            steps {
                sh '''
                    # Primjer kopiranja artefakata na server i postavljanja servisa
                    scp -r ./DocumentManagement.API/bin/Release/net7.0/publish/* user@server:/var/www/yourwebsitename/
                    ssh user@server 'sudo systemctl restart your-service.service'
                '''
            }
        }
    }
    
    post {
        always {
            cleanWs() // Čišćenje radnog prostora
        }
    }
}
